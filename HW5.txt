-- Homework #5
-- Part #1

-- sql statement (classicmodels db) using union: show products with buyPrice > 100 and <200

select productName, productLine, buyPrice
from classicmodels.products
where buyPrice > 100
union
select productName, productLine, buyPrice
from classicmodels.products
where buyPrice < 200;

-- 2

select productName, productLine, buyPrice
from classicmodels.products
where buyPrice between 100 and 200;

-- sql statement (classicmodels db) using subquery: show all customer names with employees in San Francisco office

select salesRepEmployeeNumber, customerName
from classicmodels.customers
where salesRepEmployeeNumber in
(select distinct employeeNumber from classicmodels.employees
where officeCode in
(select officeCode from classicmodels.offices where city = 'San Francisco'));


-- Part #2
-- Keep working on these queries
-- write sql for #1,2,3,4,5,7

-- 1.how many vendors, product lines, and products exist in the database?
select

COUNT(distinct productVendor) as Vendors_count,
COUNT(distinct productLine) as Product_lines_count,
COUNT(distinct productCode) as Products_count
FROM classicmodels.products;

-- 2.what is the average price (buy price, MSRP) per vendor?

select productVendor,
AVG (buyPrice) as AvgPrice,
AVG (MSRP) as AvgMSRP
from classicmodels.products
group by productVendor;

-- 3.what is the average price (buy price, MSRP) per customer?

select
orders.customerNumber, AVG(det.priceEach) as AvgPrice, (prod.buyPrice) as AvgBuyPrice,AVG(prod.MSRP) as AvgMSRP
FROM classicmodels.orders orders
join classicmodels.orderdetails det 
on orders.orderNumber = det.orderNumber
join classicmodels.products prod
on prod.productCode = det.productCode
group by orders.customerNumber
order by orders.customerNumber;

-- 4.what product was sold the most?

select COUNT(prod.productCode) as prod_cnt, MAX(det.quantityOrdered) as order_cnt, prod.productName
from classicmodels.orderdetails det
join classicmodels.products prod
on det.productCode= prod.productCode
group by prod.productCode
order by prod_cnt DESC
limit 1;

-- 5.how much money was made between buyPrice and MSRP?

select SUM(prod.msrp * det.quantityOrdered) as msrp_sales,
SUM(prod.buyPrice * det.quantityOrdered) as buyPrice_sales,
SUM(prod.msrp * det.quantityOrdered) - SUM(prod.buyPrice * det.quantityOrdered) as difference_in_sales
from classicmodels.products prod
join classicmodels.orderdetails det
on prod.productCode = det.productCode;

-- 6.which vendor sells 1966 Shelby Cobra?

select prod.productVendor, prod.productName
from classicmodels.products prod
where prod.productName like '1966 Shelby Cobra%';

-- 7.which vendor sells more products?

select prod.productVendor, SUM(det.quantityOrdered) as quantity, count(det.productcode) as quantity2
from classicmodels.products prod
join classicmodels.orderdetails det 
on prod.productCode = det.productCode
group by prod.productVendor
order by quantity desc
limit 1;
